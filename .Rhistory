# SUMMARIZE:
# aggregate your data
#-------------------------------
summarize(df.diamonds_ideal
, avg_price = mean(price, na.rm = TRUE) )
#
#
library(ggplot2)
library(dplyr)
#-------------------------------
# SUMMARIZE:
# aggregate your data
#-------------------------------
df.diamonds_ideal <- filter(diamonds, cut=="Ideal")
df.diamonds_ideal <- select(df.diamonds_ideal, carat, cut, price, color, clarity)
df.diamonds_ideal <- mutate(df.diamonds_ideal, price_per_carat = price/carat)
summarize(df.diamonds_ideal, avg_price = mean(price, na.rm = TRUE) )
#
#
library(ggplot2)
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point()
library(ggplot2)
ggplot(data = mtcars, aes(x = wt, y = mpg)) + geom_point()
#~~~~~~~~~~~~~~~~~~~~~~~~~~
# Build model using train()
#~~~~~~~~~~~~~~~~~~~~~~~~~~
library(caret)
model.mtcars_lm <- train(mpg ~ wt
,data = mtcars
,method = "lm"
)
#~~~~~~~~~~~~~~~~~~~~~~~~~~
# Retrieve coefficients for
# - slope
# - intercept
#~~~~~~~~~~~~~~~~~~~~~~~~~~
coef.icept <- coef(model.mtcars_lm$finalModel)[1]
coef.slope <- coef(model.mtcars_lm$finalModel)[2]
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Plot scatterplot and regression line
# using ggplot()
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point() +
geom_abline(slope = coef.slope, intercept = coef.icept, color = "red")
x <- list(2, "a", "b", TRUE)
x[[2]]
x[2]
x <- 1:4
y<-2:3
x+y
class(x+y)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x
print("Hello")
plot(rnorm(100))
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
cls
clear
clr
# Second exercise
laps <- 100
product <- 1
for (i in 1:laps)
{
product <- product * i
}
print (product)
laps <- 5
product <- 1
for (i in 1:laps)
{
product <- product * i
}
print (product)
# Second exercise
laps <- 5
product <- 1
for (i in 1:laps)
{
product <- product * i
}
print (product)
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
plot(rnorm(1000))
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_02_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
x
mean(x)
sd(x)
median(x)
mode(x)
x = seq(0,100)
median(x)
median(x)
mean(x)
x=rnorm(100, mean=0, sd=1)
hist(x)
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
rnorm(100, 78, 3)
mean(rnorm(100, 78, 3))
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
mean(rnorm(100, 78, 13))
mean(rnorm(100, 78, 23))
pnorm(90, 78, 3)
dbinom(4,10,(1/6))
greater_100 = 1-pnorm(100,40,10)
#Exercise 2a
greater_100 = 1-pnorm(100,40,10),
less_than_zero = pnorm(0,40,10)
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
qnorm(0.75, 40, 10)
x=rnorm(10,40,10)
mean(x)
source('~/Packages/GithubCodes/stats-544/Week_03_Demo.R')
x=rnorm(10,40,10)
mean(x)
sd(x)
dbinom(30,200,(1/6))
dbinom(30,200,1/6)
sum(dbinom(0: 20, 200, (1/6)))
,1/6)
sum(dbinom(0: 20, 200, (1/6)))
sum(dbinom(1:
dbinom(30,200,1/6)
sum(dbinom(0: 20, 200, (1/6)))
sum(dbinom(1: 20, 200, (1/6)))
dbinom(30,200,(1/6))
sum(dbinom(0: 20, 200, (1/6)))
sum(dbinom(1: 20, 200, (1/6)))
x = dbinom(0: 200, 200, (1/6))
mean(x)
var(x)
sd(x)
-2*sd(x)
2*sd(x)
qbinom(0.95, mean(x), sd(x))
qbinom(0.95, mean=mean(x), sd=sd(x))
qbinom(0.95, round(mean(x),digits=2), round(sd(x),digits=2))
x = dbinom(0: 200, 200, (1/6))
mean(x)
var(x)
sd(x)
-2*sd(x)
2*sd(x)
qbinom(0.95, 200, 1/6)
qbinom(0.05, 200, 1/6)
pbinom(24, 200, 1/6)
pbinom(42, 200, 1/6)
dbinom(42, 200, 1/6) - dbinom(24, 200, 1/6)
dbinom(24, 200, 1/6) - dbinom(42, 200, 1/6)
qbinom(0.95, 2000, 1/6)
pbinom(24, 200, 1/6) - pbinom(42, 200, 1/6)
pbinom(42, 200, 1/6) - pbinom(24, 200, 1/6)
sum(dbinom(24:42, 200, 1/6))
qbinom(0.95, 2000, 1/6)
qbinom(0.05, 2000, 1/6)
sum(dbinom(24:42, 2000, 1/6))
pbinom(42, 2000, 1/6) - pbinom(24, 2000, 1/6)
sum(dbinom(306:361, 2000, 1/6))
pbinom(361, 2000, 1/6) - pbinom(306, 2000, 1/6)
qbinom(0.95, 200, 1/6)
qbinom(0.05, 200, 1/6)
sum(dbinom(24:42, 200, 1/6))
pbinom(42, 200, 1/6) - pbinom(24, 200, 1/6)
qnorm(0.2, 176.3, 7)
qnorm(0.2, 176.3, 7)
qnorm(0.9, 176.3, 7)
sample(160:170,10)
mean(sample(170:185,10))
sd(sample(170:185,10))
mean(sample(170:185,10))
sd(sample(170:185,10))
mean(sample(170:185,40))
sd(sample(170:185,40))
mean(sample(170:185,40))
sd(sample(170:185,40))
mean(sample(170:185,10))
sd(sample(170:185,10))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(40, min=170, max=185))
sd(runif(40, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
mean(runif(10, min=170, max=185))
sd(runif(10, min=170, max=185))
x=rnorm(10,176.3,7)
mean(x)
sd(x)
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(170, 176.3, 7)
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
x=rnorm(40,176.3,7)
sd(x)
mean(x)
mean(x) - 2*sd(x)
mean(x) + 2*sd(x)
qnorm(0.75, mean(x), sd(x))
qnorm(0.75, mean(x), sd(x))
qnorm(0, mean(x), sd(x))
x=rnorm(40,176.3,7)
sd(x)
mean(x)
qnorm(0.875, mean(x), sd(x)) - qnorm(0.125, mean(x), sd(x))
x=rnorm(40,176.3,7)
sd(x)
mean(x)
qnorm(0.875, mean(x), sd(x))
qnorm(0.125, mean(x), sd(x))
dbinom(30,200,(1/6))
sum(dbinom(0: 20, 200, (1/6)))
pbinom(20, 200, 1/6)
x = dbinom(0: 200, 200, (1/6))
mean(x)
var(x)
sd(x)
x = dbinom(1: 200, 200, (1/6))
mean(x)
var(x)
sd(x)
x = dbinom(0: 200, 200, (1/6))
mean(x)
var(x)
sd(x)
x = dbinom(0: 200, 200, (1/6))
mean(x)
var(x)
sd(x)
qbinom(0.95, 200, 1/6)
qbinom(0.05, 200, 1/6)
sum(dbinom(24:42, 200, 1/6))
pbinom(42, 200, 1/6) - pbinom(24, 200, 1/6)
qbinom(0.975, 200, 1/6)
qbinom(0.025, 200, 1/6)
qbinom(0.975, 200, 1/6)
qbinom(0.025, 200, 1/6)
sum(dbinom(23:44, 200, 1/6))
pbinom(44, 200, 1/6) - pbinom(23, 200, 1/6)
round(sum(dbinom(23:44, 200, 1/6)),2)
qbinom(0.975, 2000, 1/6)
qbinom(0.025, 2000, 1/6)
round(sum(dbinom(301:366, 2000, 1/6)),2)
qnorm(0.2, 176.3, 7)
qnorm(0.9, 176.3, 7)
x=rnorm(10,176.3,7)
mean(x)
sd(x)
x=rnorm(40,176.3,7)
mean(x)
sd(x)
8.091181 - 7.594613
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
x=rnorm(40,176.3,7)
mean(x)
sd(x)
pnorm(180, mean(x), sd(x)) - pnorm(170, mean(x), sd(x))
qnorm(0.025,mean(x),sd(x))
x=rnorm(40,176.3,7)
sd(x)
mean(x)
mean(x) - 2*sd(x)
mean(x) + 2*sd(x)
qnorm(0.025,mean(x),sd(x))
qnorm(0.975,mean(x),sd(x))
qnorm(0.025,176.8462,5.217332)
qnorm(0.025,176.8462,5.217332)
qnorm(0.975,176.8462,5.217332)
mean = 200*(1/6)
p=1/6
p*(1-p)
200*(1/6)
0.1388889 * 200
28^0.5
pnorm(160, 176.3, 7)
qnorm(0.95)
qnorm(0.975, 0.4, 0.0155)
0.40+1.64*0.0155
qnorm(0.95, 0.4, 0.0155)
qnorm(0.975, 0.4, 0.0155)
0.40+2*0.0155
install.packages("Hmisc")
library(Hmisc)
binconf(550,1000,alpha=0.5)
dbinom(50, 400, 40/400)
dbinom(50, 400, 0.1)
(0.1)^50*(0.9)^350*400C50
install.packages("combinat")
(0.1)^50*(0.9)^350*combn(400,50)
combn(400,50)
(0.1)^50*(0.9)^350*dim(combn(400,50))[2]
p_chewing  = (22+18+33+3)/313
p_not_chewing = 1 - p_chewing
p_chewing  = (22+18+33+3)/313
p_not_chewing = 1 - p_chewing
p_18_24 = 72/311
p_25_44 = 53/311
p_45_64 = 93/311
p_65_old = 93/311
p_chewing_18_24 = p_chewing * p_18_24
p_not_chewing_18_24 = p_not_chewing * p_18_24
p_chewing_25_44 = p_chewing * p_25_44
p_not_chewing_25_44 = p_not_chewing * p_25_44
p_chewing_45_64 = p_chewing * p_45_64
p_not_chewing_45_65 = p_not_chewing * p_45_64
p_chewing_65_old = p_chewing * p_65_old
p_not_chewing_65_old = p_not_chewing * p_65_old
p_chewing_18_24 * 311
p_not_chewing_18_24 * 311
p_chewing_25_44 * 311
p_not_chewing_25_44 * 311
p_chewing_45_64 * 311
p_not_chewing_45_65 * 311
p_chewing_65_old * 311
p_not_chewing_65_old * 311
library(Hmisc)
library(pwr)
table = matrix(c(22,18,33,3,50,35,60,90),nrow=2,ncol=4,byrow=TRUE)
chisq.test(table)
p = 1-pchisq(33.05, 3)
h = 2 * asin(sqrt(72*100/311)) - 2 * asin(sqrt(186*100/311))
h = 2 * asin(sqrt(186/311)) - 2 * asin(sqrt(72/311))
pwr.2p.test(h=h, sig.level=0.025, power = 0.80)
h = 2 * asin(sqrt(40/311)) - 2 * asin(sqrt(36/311))
pwr.2p.test(h=h, sig.level=0.025, power = 0.80)
h = 2 * asin(sqrt(40/125)) - 2 * asin(sqrt(36/186))
pwr.2p.test(h=h, sig.level=0.025, power = 0.80)
pwr.2p.test(n=1000, sig.level = 0.025, h=h)
chisq.test(x=c(132,6,62),p=c(150,28,22))
chisq.test(x=c(132,6,62),p=c(0.75,0.14,0.11))
library(Hmisc)
library(pwr)
1-pchisq(92.17, 2)
(10+9+15+8)/277
(50+35+60+90)/277
60/277
44/277
75/277
98/277
0.1516245* 0.2166065
0.8483755 * 0.2166065
0.1516245* 0.1588448
0.8483755* 0.1588448
0.1516245 * 0.2707581
0.8483755 * 0.2707581
0.1516245*0.3537906
0.8483755*0.3537906
0.03284285 * 277
0.1837636*277
0.02408476*277
0.13476*277
0.04105356*277
0.2297045*277
0.05364332*277
0.3001473*277
1-pchisq(6.22,3)
table = matrix(c(10,9,15,8,50,35,60,90),nrow=2,ncol=4,byrow=TRUE)
chisq.test(table)
0.5/2
0.5/3
pwr.t.test(d=0.1666667, sig.level = 0.05, power = 0.90, alternative = "greater",type = "two.sample")
pwr.t2n.test(d=0.1666667, sig.level = 0.05, power = 0.90, alternative = "greater",type = "two.sample")
pwr.t.test(d=0.1666667, sig.level = 0.05, power = 0.90, alternative = "two.sided",type = "two.sample")
pwr.t.test(d=0.1666667, sig.level = 0.05, n=500, alternative = "two.sided",type = "two.sample")
(10+9)/(10+9+50+35)
(15+8)/(15+8+60+90)
h = 2 * asin(sqrt(0.1826923)) - 2 * asin(sqrt(0.132948))
pwr.2p.test(h=h, sig.level=0.025, power = 0.80)
pwr.2p.test(n=1000, sig.level = 0.025, h=h)
setwd("~/Packages/GithubCodes/RWorkshopDrQuinn")
install.packages("coda","MCMCpack","mvtnorm")
install.packages("coda")
install.packages("MCMCpack")
install.packages("mvtnorm")
